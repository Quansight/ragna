[build-system]
requires = [
    "setuptools>=45",
    "setuptools_scm[toml]>=6.2",
]
build-backend = "setuptools.build_meta"

[project]
name = "Ragna"
authors = [
    { name = "Ragna Development Team", email = "connect@quansight.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.9"
dependencies = [
    "huey",
    "importlib_metadata >=4.6; python_version < '3.10'",
    "packaging",
    "pydantic <2",
    "sqlalchemy >=2",
    "structlog",
    "typer",
]
dynamic = ["version"]

[project.optional-dependencies]
console = [
    "rich",
]
api = [
    "aiofiles",
    "fastapi",
    "PyJWT",
    "python-multipart",
    "uvicorn",
]
ui = [
#    "panel ==1.3",
#    "param",
    "httpx",
]
# to update the two entries below, run scripts/update_optional_dependencies.py
builtin-components = [
    "chromadb>=0.4",
    "httpx",
    "lancedb>=0.2",
    "pyarrow",
    "sentence-transformers",
    "tiktoken",
]
complete = [
    "PyJWT",
    "aiofiles",
    "chromadb>=0.4",
    "fastapi",
    "httpx",
    "lancedb>=0.2",
    "pyarrow",
    "python-multipart",
    "rich",
    "sentence-transformers",
    "tiktoken",
    "uvicorn",
]



[tool.setuptools_scm]
write_to = "ragna/_version.py"
local_scheme = "node-and-timestamp"

[project.scripts]
ragna = "ragna._cli:app"

[tool.setuptools.packages.find]
include = [
    "ragna*",
]

[tool.usort.known]
# TODO: remove this with usort>=1.1
third_party = ["panel"]

[tool.ruff]
# Ignore line too long, because due to black, the error can only occur for strings
ignore = ["E501"]

[tool.ruff.per-file-ignores]
# ignore unused imports and imports not at the top of the file in __init__.py files
"__init__.py" = ["F401", "E402"]


[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-rfEX --tb=short -Werror"
testpaths = [
    "tests",
]
xfail_strict = true

[tool.mypy]

files = "ragna"

show_error_codes = true
pretty = true

allow_redefinition = true
no_implicit_optional = true

warn_redundant_casts = true
warn_unused_ignores = true

warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = [
    "fitz",
]
ignore_missing_imports = true
